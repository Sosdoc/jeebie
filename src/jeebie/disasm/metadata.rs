/// This file is autogenerated, check the generate_tables.py source file.


pub static DISASM_TABLE : [&'static str; 256] = [
    // 0x00
    "NOP", "LD BC,nn", "LD (BC),A", "INC BC",
    "INC B", "DEC B", "LD B,n", "RLCA",
    "LD (nn),SP", "ADD HL,BC", "LD A,(BC)", "DEC BC",
    "INC C", "DEC C", "LD C,n", "RRCA",
    // 0x10
    "Missing", "LD DE,nn", "LD (DE),A", "INC DE",
    "INC D", "DEC D", "LD D,n", "RLA",
    "JR n", "ADD HL,DE", "LD A,(DE)", "DEC DE",
    "INC E", "DEC E", "LD E,n", "RRA",
    // 0x20
    "JR NZ,*", "LD HL,nn", "LDI (HL),A", "INC HL",
    "INC H", "DEC H", "LD H,n", "Missing",
    "JR Z,*", "ADD HL,HL", "LDI A,(HL)", "DEC HL",
    "INC L", "DEC L", "LD L,n", "Missing",
    // 0x30
    "JR NC,*", "LD SP,nn", "LDD (HL),A", "INC SP",
    "INC (HL)", "DEC (HL)", "LD (HL),n", "Missing",
    "JR C,*", "ADD HL,SP", "LDD A,(HL)", "DEC SP",
    "INC A", "DEC A", "LD A,n", "Missing",
    // 0x40
    "LD B,B", "LD B,C", "LD B,D", "LD B,E",
    "LD B,H", "LD B,L", "LD B,(HL)", "LD B,A",
    "LD C,B", "LD C,C", "LD C,D", "LD C,E",
    "LD C,H", "LD C,L", "LD C,(HL)", "LD C,A",
    // 0x50
    "LD D,B", "LD D,C", "LD D,D", "LD D,E",
    "LD D,H", "LD D,L", "LD D,(HL)", "LD D,A",
    "LD E,B", "LD E,C", "LD E,D", "LD E,E",
    "LD E,H", "LD E,L", "LD E,(HL)", "LD E,A",
    // 0x60
    "LD H,B", "LD H,C", "LD H,D", "LD H,E",
    "LD H,H", "LD H,L", "LD H,(HL)", "LD H,A",
    "LD L,B", "LD L,C", "LD L,D", "LD L,E",
    "LD L,H", "LD L,L", "LD L,(HL)", "LD L,A",
    // 0x70
    "LD (HL),B", "LD (HL),C", "LD (HL),D", "LD (HL),E",
    "LD (HL),H", "LD (HL),L", "Missing", "LD (HL),A",
    "LD A,B", "LD A,C", "LD A,D", "LD A,E",
    "LD A,H", "LD A,L", "LD A,(HL)", "LD A,A",
    // 0x80
    "ADD A,B", "ADD A,C", "ADD A,D", "ADD A,E",
    "ADD A,H", "ADD A,L", "ADD A,(HL)", "ADD A,A",
    "ADC A,B", "ADC A,C", "ADC A,D", "ADC A,E",
    "ADC A,H", "ADC A,L", "ADC A,(HL)", "ADC A,A",
    // 0x90
    "SUB B", "SUB C", "SUB D", "SUB E",
    "SUB H", "SUB L", "SUB (HL)", "SUB A",
    "SBC A,B", "SBC A,C", "SBC A,D", "SBC A,E",
    "SBC A,H", "SBC A,L", "SBC A,(HL)", "SBC A,A",
    // 0xa0
    "AND B", "AND C", "AND D", "AND E",
    "AND H", "AND L", "AND (HL)", "AND A",
    "XOR B", "XOR C", "XOR D", "XOR E",
    "XOR H", "XOR L", "XOR (HL)", "XOR A",
    // 0xb0
    "OR B", "OR C", "OR D", "OR E",
    "OR H", "OR L", "OR (HL)", "OR A",
    "CP B", "CP C", "CP D", "CP E",
    "CP H", "CP L", "CP (HL)", "CP A",
    // 0xc0
    "RET NZ", "POP BC", "JP NZ,nn", "JP nn",
    "CALL NZ,nn", "PUSH BC", "ADD A,*", "RST 00H",
    "RET Z", "RET", "JP Z,nn", "Missing",
    "CALL Z,nn", "CALL nn", "ADC A,*", "RST 08H",
    // 0xd0
    "RET NC", "POP DE", "JP NC,nn", "Missing",
    "CALL NC,nn", "PUSH DE", "SUB *", "RST 10H",
    "RET C", "Missing", "JP C,nn", "Missing",
    "CALL C,nn", "Missing", "SBC A,*", "RST 18H",
    // 0xe0
    "LDH ($FF00+n),A", "POP HL", "LD ($FF00+C),A", "Missing",
    "Missing", "PUSH HL", "AND *", "RST 20H",
    "ADD SP,*", "JP (HL)", "LD (nn),A", "Missing",
    "Missing", "Missing", "XOR *", "RST 28H",
    // 0xf0
    "LDH A,($FF00+n)", "POP AF", "LD A,($FF00 + C)", "DI",
    "Missing", "PUSH AF", "OR *", "RST 30H",
    "LD HL,SP+n", "LD SP,HL", "LD A,(nn)", "EI",
    "Missing", "Missing", "CP *", "RST 38H",
];

pub static CB_DISASM_TABLE : [&'static str; 256] = [
    // 0x00
    "RLC B", "RLC C", "RLC D", "RLC E",
    "RLC H", "RLC L", "RLC (HL)", "RLC A",
    "RRC B", "RRC C", "RRC D", "RRC E",
    "RRC H", "RRC L", "RRC (HL)", "RRC A",
    // 0x10
    "RL B", "RL C", "RL D", "RL E",
    "RL H", "RL L", "RL (HL)", "RL A",
    "RR B", "RR C", "RR D", "RR E",
    "RR H", "RR L", "RR (HL)", "RR A",
    // 0x20
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    // 0x30
    "SWAP B", "SWAP C", "SWAP D", "SWAP E",
    "SWAP H", "SWAP L", "SWAP (HL)", "SWAP A",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    // 0x40
    "BIT 0,B", "BIT 0,C", "BIT 0,D", "BIT 0,E",
    "BIT 0,H", "BIT 0,L", "BIT 0,(HL)", "BIT 0,A",
    "BIT 1,B", "BIT 1,C", "BIT 1,D", "BIT 1,E",
    "BIT 1,H", "BIT 1,L", "BIT 1,(HL)", "BIT 1,A",
    // 0x50
    "BIT 2,B", "BIT 2,C", "BIT 2,D", "BIT 2,E",
    "BIT 2,H", "BIT 2,L", "BIT 2,(HL)", "BIT 2,A",
    "BIT 3,B", "BIT 3,C", "BIT 3,D", "BIT 3,E",
    "BIT 3,H", "BIT 3,L", "BIT 3,(HL)", "BIT 3,A",
    // 0x60
    "BIT 4,B", "BIT 4,C", "BIT 4,D", "BIT 4,E",
    "BIT 4,H", "BIT 4,L", "BIT 4,(HL)", "BIT 4,A",
    "BIT 5,B", "BIT 5,C", "BIT 5,D", "BIT 5,E",
    "BIT 5,H", "BIT 5,L", "BIT 5,(HL)", "BIT 5,A",
    // 0x70
    "BIT 6,B", "BIT 6,C", "BIT 6,D", "BIT 6,E",
    "BIT 6,H", "BIT 6,L", "BIT 6,(HL)", "BIT 6,A",
    "BIT 7,B", "BIT 7,C", "BIT 7,D", "BIT 7,E",
    "BIT 7,H", "BIT 7,L", "BIT 7,(HL)", "BIT 7,A",
    // 0x80
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    // 0x90
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    // 0xa0
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    // 0xb0
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    // 0xc0
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    // 0xd0
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    // 0xe0
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    // 0xf0
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
    "Missing", "Missing", "Missing", "Missing",
];